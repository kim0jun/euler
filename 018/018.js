//오리지널배열
var treeArr = [75,95,64,17,47,82,18,35,87,10,20,04,82,47,65,19,01,23,75,03,34,88,02,77,73,07,63,67,99,65,04,28,06,16,70,92,41,41,26,56,83,40,80,70,33,41,48,72,33,47,32,37,16,94,29,53,71,44,65,25,43,91,52,97,51,14,70,11,33,28,77,73,17,78,39,68,17,57,91,71,52,38,17,14,91,43,58,50,27,29,48,63,66,04,68,89,53,67,30,73,16,69,87,40,31,04,62,98,27,23,09,70,98,73,93,38,53,60,04,23];
//카피배열(노드의 최대 합값을 반영);
var copyArr = [75,95,64,17,47,82,18,35,87,10,20,04,82,47,65,19,01,23,75,03,34,88,02,77,73,07,63,67,99,65,04,28,06,16,70,92,41,41,26,56,83,40,80,70,33,41,48,72,33,47,32,37,16,94,29,53,71,44,65,25,43,91,52,97,51,14,70,11,33,28,77,73,17,78,39,68,17,57,91,71,52,38,17,14,91,43,58,50,27,29,48,63,66,04,68,89,53,67,30,73,16,69,87,40,31,04,62,98,27,23,09,70,98,73,93,38,53,60,04,23];

function getMaxTree(node,cfloor,tfllor){
    var pFloorStart = (cfloor-1)*cfloor/2;
    var newNode =  node-pFloorStart+cfloor*(cfloor+1)/2; 
    if(cfloor<tfllor){
        getMaxTree(newNode,cfloor+1,tfllor);
        getMaxTree(newNode+1,cfloor+1,tfllor);
    }
    copyArr[node] = treeArr[node]+Math.max( copyArr[newNode],copyArr[newNode+1]);
}

getMaxTree(0,1,14);
console.log(copyArr[0]); // 1074